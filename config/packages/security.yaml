security:
    encoders:
        App\entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        # déclaer le nom du provider, pour dire d'ou viennent les utilisateurs
        users_in_database:
            #expliquer que ce provider va utiliser un class
            entity:
                #définir le nom de la class
                class: App\Entity\User
                #définir la propriété qui va autentifier l'utilisateur
                #quand un utiilisateur va vouloir s'authentifier
                #symfony va chércher dans la base de données
                #dans la table User
                # si quelqu'un a cet email et qui a cet email là
                #ensuite il va prendre cet utiilistuer et faire une comparaison de mot de pass
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        admin:
            #tous ce qui commence par /admin fait partie du firewall admin
            pattern: ^/admin
            # on peut arriver dessus de manière anonyme (/admin/login)
            anonymous: true
            # si j'ai des connexions sur ce firewall, je cherche les utilisateur dans la BD
            provider: users_in_database

            form_login:
            #spécifier le form_login "donner le nom de la route"
                login_path: admin_account_login
            #le path pour vérifier si les informations données dans le formulaire du login sont vrai
                check_path: admin_account_login
            
            #spécifier le formulaire de logout
            logout:
                path: admin_account_logout
                # spécifier la redirection avec target
                target: homepage

        main:
            anonymous: lazy
            #préciser à symfony où aller chercher les utilsatuers
            #donc on lui donne le provider
            provider: users_in_database
            #on va dire à symfony qu'on veut utiliser un formulaire de login
            form_login:
                #préciser le chemin pour aller à la page de connexion
                login_path: account_login
                #préciser le chemin sut lequel on doit vérifier les information d'authentification 
                check_path: account_login

            logout:
                path: account_logout
                target: account_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
